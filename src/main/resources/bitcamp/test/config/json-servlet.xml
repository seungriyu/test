<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd"
        >
   
    
    
    <!-- 웹 컴포넌트(페이지 컨트롤러 등)만 관리한다.-->
    <context:component-scan base-package="bitcamp.test.web.json">
    
    </context:component-scan>
    
    <!-- Spring WebMVC 관련 애노테이션을 처리할 객체들을 등록한다. -->
    <!-- MVC 관련 애노테이션을 처리할 객체들을 자동 등록한다. 
         matrix variable 기능을 사용하고 싶으면 다음과 같이 활성화시켜라!
    -->
    <mvc:annotation-driven enable-matrix-variables="true"/>
    
    <!-- Spring WebMVC의 기본 뷰 리졸버를 교체한다.
         => JSP URL의 앞뒤 경로를 미리 설정해두면 페이지 컨트롤러에서 
            view URL을 지정하기 쉽다.  
    -->
    
    <mvc:annotation-driven enable-matrix-variables="true">
      <mvc:message-converters>
        <!-- HttpMessageConverter : Json-> 자바, 객체 -> Json 중간에 관여하여 바꿔줌 -->
        <!-- new MappingJackson2HttpMessageConverter 객체를 만들어라 -->
         <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
          <!-- setObejctMapper() -->
          <property name="objectMapper">
            <!-- 어떤 객체를 만드는데  new ObjectMapper() 만들어라-->
             <bean class="com.fasterxml.jackson.databind.ObjectMapper">
                <!-- setDateFormat() 을 호출해라 -->
                <property name="dateFormat">
                    <!-- new simpleDateFormat("yyyy-MM-dd") -->
                    <bean class="java.text.SimpleDateFormat">
                        <constructor-arg value="yyyy-MM-dd"/>
                    </bean>
                </property>
             </bean>
          </property>
        </bean>
      </mvc:message-converters>
    </mvc:annotation-driven>
    
    
    
     <!-- Ajax 요청에 대한 CrossDomain 설정
        서버에서 html을 다운 받지 않으면 다른 클라우드에서 받은건 요청 할 수 없다.
        모바일 같은 경우 때문이다.
      -->
    <mvc:cors>

    <mvc:mapping path="/**"
        allowed-origins="*"
        max-age="100" />
    </mvc:cors>
    
     
</beans>